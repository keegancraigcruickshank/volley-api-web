// @generated by protoc-gen-es v1.8.0 with parameter "target=js+dts"
// @generated from file subscriptions/v1/public/subscriptions.proto (package subscriptions.v1.public, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message subscriptions.v1.public.SubscriptionPlan
 */
export declare class SubscriptionPlan extends Message<SubscriptionPlan> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string subscription_key = 2;
   */
  subscriptionKey: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: float price = 5;
   */
  price: number;

  constructor(data?: PartialMessage<SubscriptionPlan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subscriptions.v1.public.SubscriptionPlan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionPlan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionPlan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionPlan;

  static equals(a: SubscriptionPlan | PlainMessage<SubscriptionPlan> | undefined, b: SubscriptionPlan | PlainMessage<SubscriptionPlan> | undefined): boolean;
}

/**
 * @generated from message subscriptions.v1.public.GetSubscriptionPlansRequest
 */
export declare class GetSubscriptionPlansRequest extends Message<GetSubscriptionPlansRequest> {
  constructor(data?: PartialMessage<GetSubscriptionPlansRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subscriptions.v1.public.GetSubscriptionPlansRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubscriptionPlansRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubscriptionPlansRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubscriptionPlansRequest;

  static equals(a: GetSubscriptionPlansRequest | PlainMessage<GetSubscriptionPlansRequest> | undefined, b: GetSubscriptionPlansRequest | PlainMessage<GetSubscriptionPlansRequest> | undefined): boolean;
}

/**
 * @generated from message subscriptions.v1.public.GetSubscriptionPlansResponse
 */
export declare class GetSubscriptionPlansResponse extends Message<GetSubscriptionPlansResponse> {
  /**
   * @generated from field: repeated subscriptions.v1.public.SubscriptionPlan plans = 1;
   */
  plans: SubscriptionPlan[];

  constructor(data?: PartialMessage<GetSubscriptionPlansResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subscriptions.v1.public.GetSubscriptionPlansResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubscriptionPlansResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubscriptionPlansResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubscriptionPlansResponse;

  static equals(a: GetSubscriptionPlansResponse | PlainMessage<GetSubscriptionPlansResponse> | undefined, b: GetSubscriptionPlansResponse | PlainMessage<GetSubscriptionPlansResponse> | undefined): boolean;
}

