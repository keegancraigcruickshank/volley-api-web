// @generated by protoc-gen-es v2.1.0 with parameter "target=js+dts"
// @generated from file teams/v1/private/teams.proto (package teams.v1.private, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file teams/v1/private/teams.proto.
 */
export declare const file_teams_v1_private_teams: GenFile;

/**
 * @generated from message teams.v1.private.ListedTeam
 */
export declare type ListedTeam = Message<"teams.v1.private.ListedTeam"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated string players = 3;
   */
  players: string[];

  /**
   * @generated from field: int32 modified = 4;
   */
  modified: number;

  /**
   * @generated from field: string division = 5;
   */
  division: string;
};

/**
 * Describes the message teams.v1.private.ListedTeam.
 * Use `create(ListedTeamSchema)` to create a new message.
 */
export declare const ListedTeamSchema: GenMessage<ListedTeam>;

/**
 * @generated from message teams.v1.private.AddTeamRequest
 */
export declare type AddTeamRequest = Message<"teams.v1.private.AddTeamRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated string players = 2;
   */
  players: string[];

  /**
   * @generated from field: optional string division = 3;
   */
  division?: string;
};

/**
 * Describes the message teams.v1.private.AddTeamRequest.
 * Use `create(AddTeamRequestSchema)` to create a new message.
 */
export declare const AddTeamRequestSchema: GenMessage<AddTeamRequest>;

/**
 * @generated from message teams.v1.private.AddTeamResponse
 */
export declare type AddTeamResponse = Message<"teams.v1.private.AddTeamResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated string players = 3;
   */
  players: string[];

  /**
   * @generated from field: string division = 4;
   */
  division: string;
};

/**
 * Describes the message teams.v1.private.AddTeamResponse.
 * Use `create(AddTeamResponseSchema)` to create a new message.
 */
export declare const AddTeamResponseSchema: GenMessage<AddTeamResponse>;

/**
 * @generated from message teams.v1.private.ListTeamsFilter
 */
export declare type ListTeamsFilter = Message<"teams.v1.private.ListTeamsFilter"> & {
  /**
   * @generated from field: repeated string team_ids = 1;
   */
  teamIds: string[];

  /**
   * @generated from field: repeated string division_ids = 2;
   */
  divisionIds: string[];
};

/**
 * Describes the message teams.v1.private.ListTeamsFilter.
 * Use `create(ListTeamsFilterSchema)` to create a new message.
 */
export declare const ListTeamsFilterSchema: GenMessage<ListTeamsFilter>;

/**
 * @generated from message teams.v1.private.ListTeamsRequest
 */
export declare type ListTeamsRequest = Message<"teams.v1.private.ListTeamsRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: optional int32 page = 2;
   */
  page?: number;

  /**
   * @generated from field: optional int32 pageSize = 3;
   */
  pageSize?: number;

  /**
   * @generated from field: optional teams.v1.private.SortDirection sortDirection = 4;
   */
  sortDirection?: SortDirection;

  /**
   * @generated from field: optional teams.v1.private.ListTeamsFilter filter = 5;
   */
  filter?: ListTeamsFilter;
};

/**
 * Describes the message teams.v1.private.ListTeamsRequest.
 * Use `create(ListTeamsRequestSchema)` to create a new message.
 */
export declare const ListTeamsRequestSchema: GenMessage<ListTeamsRequest>;

/**
 * @generated from message teams.v1.private.ListTeamsResponse
 */
export declare type ListTeamsResponse = Message<"teams.v1.private.ListTeamsResponse"> & {
  /**
   * @generated from field: repeated teams.v1.private.ListedTeam teams = 1;
   */
  teams: ListedTeam[];

  /**
   * @generated from field: int32 totalCount = 2;
   */
  totalCount: number;
};

/**
 * Describes the message teams.v1.private.ListTeamsResponse.
 * Use `create(ListTeamsResponseSchema)` to create a new message.
 */
export declare const ListTeamsResponseSchema: GenMessage<ListTeamsResponse>;

/**
 * @generated from message teams.v1.private.GetTeamRequest
 */
export declare type GetTeamRequest = Message<"teams.v1.private.GetTeamRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message teams.v1.private.GetTeamRequest.
 * Use `create(GetTeamRequestSchema)` to create a new message.
 */
export declare const GetTeamRequestSchema: GenMessage<GetTeamRequest>;

/**
 * @generated from message teams.v1.private.GetTeamResponse
 */
export declare type GetTeamResponse = Message<"teams.v1.private.GetTeamResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated string players = 3;
   */
  players: string[];

  /**
   * @generated from field: int32 modified = 4;
   */
  modified: number;

  /**
   * @generated from field: string division = 5;
   */
  division: string;
};

/**
 * Describes the message teams.v1.private.GetTeamResponse.
 * Use `create(GetTeamResponseSchema)` to create a new message.
 */
export declare const GetTeamResponseSchema: GenMessage<GetTeamResponse>;

/**
 * @generated from message teams.v1.private.RemoveTeamsRequest
 */
export declare type RemoveTeamsRequest = Message<"teams.v1.private.RemoveTeamsRequest"> & {
  /**
   * @generated from field: repeated string teams = 1;
   */
  teams: string[];
};

/**
 * Describes the message teams.v1.private.RemoveTeamsRequest.
 * Use `create(RemoveTeamsRequestSchema)` to create a new message.
 */
export declare const RemoveTeamsRequestSchema: GenMessage<RemoveTeamsRequest>;

/**
 * @generated from message teams.v1.private.RemoveTeamsResponse
 */
export declare type RemoveTeamsResponse = Message<"teams.v1.private.RemoveTeamsResponse"> & {
};

/**
 * Describes the message teams.v1.private.RemoveTeamsResponse.
 * Use `create(RemoveTeamsResponseSchema)` to create a new message.
 */
export declare const RemoveTeamsResponseSchema: GenMessage<RemoveTeamsResponse>;

/**
 * @generated from message teams.v1.private.UpdateTeamRequest
 */
export declare type UpdateTeamRequest = Message<"teams.v1.private.UpdateTeamRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: repeated string players = 3;
   */
  players: string[];

  /**
   * @generated from field: optional string division = 4;
   */
  division?: string;
};

/**
 * Describes the message teams.v1.private.UpdateTeamRequest.
 * Use `create(UpdateTeamRequestSchema)` to create a new message.
 */
export declare const UpdateTeamRequestSchema: GenMessage<UpdateTeamRequest>;

/**
 * @generated from message teams.v1.private.UpdateTeamResponse
 */
export declare type UpdateTeamResponse = Message<"teams.v1.private.UpdateTeamResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated string players = 3;
   */
  players: string[];
};

/**
 * Describes the message teams.v1.private.UpdateTeamResponse.
 * Use `create(UpdateTeamResponseSchema)` to create a new message.
 */
export declare const UpdateTeamResponseSchema: GenMessage<UpdateTeamResponse>;

/**
 * @generated from message teams.v1.private.AssociatePlayersToTeamsRequest
 */
export declare type AssociatePlayersToTeamsRequest = Message<"teams.v1.private.AssociatePlayersToTeamsRequest"> & {
  /**
   * @generated from field: repeated string players = 1;
   */
  players: string[];

  /**
   * @generated from field: repeated string teams = 2;
   */
  teams: string[];
};

/**
 * Describes the message teams.v1.private.AssociatePlayersToTeamsRequest.
 * Use `create(AssociatePlayersToTeamsRequestSchema)` to create a new message.
 */
export declare const AssociatePlayersToTeamsRequestSchema: GenMessage<AssociatePlayersToTeamsRequest>;

/**
 * @generated from message teams.v1.private.AssociatePlayersToTeamsResponse
 */
export declare type AssociatePlayersToTeamsResponse = Message<"teams.v1.private.AssociatePlayersToTeamsResponse"> & {
};

/**
 * Describes the message teams.v1.private.AssociatePlayersToTeamsResponse.
 * Use `create(AssociatePlayersToTeamsResponseSchema)` to create a new message.
 */
export declare const AssociatePlayersToTeamsResponseSchema: GenMessage<AssociatePlayersToTeamsResponse>;

/**
 * @generated from message teams.v1.private.DissociatePlayersFromTeamsRequest
 */
export declare type DissociatePlayersFromTeamsRequest = Message<"teams.v1.private.DissociatePlayersFromTeamsRequest"> & {
  /**
   * @generated from field: repeated string players = 1;
   */
  players: string[];

  /**
   * @generated from field: repeated string teams = 2;
   */
  teams: string[];
};

/**
 * Describes the message teams.v1.private.DissociatePlayersFromTeamsRequest.
 * Use `create(DissociatePlayersFromTeamsRequestSchema)` to create a new message.
 */
export declare const DissociatePlayersFromTeamsRequestSchema: GenMessage<DissociatePlayersFromTeamsRequest>;

/**
 * @generated from message teams.v1.private.DissociatePlayersFromTeamsResponse
 */
export declare type DissociatePlayersFromTeamsResponse = Message<"teams.v1.private.DissociatePlayersFromTeamsResponse"> & {
};

/**
 * Describes the message teams.v1.private.DissociatePlayersFromTeamsResponse.
 * Use `create(DissociatePlayersFromTeamsResponseSchema)` to create a new message.
 */
export declare const DissociatePlayersFromTeamsResponseSchema: GenMessage<DissociatePlayersFromTeamsResponse>;

/**
 * @generated from message teams.v1.private.UpdateTeamDivisionRequest
 */
export declare type UpdateTeamDivisionRequest = Message<"teams.v1.private.UpdateTeamDivisionRequest"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: string division_id = 2;
   */
  divisionId: string;
};

/**
 * Describes the message teams.v1.private.UpdateTeamDivisionRequest.
 * Use `create(UpdateTeamDivisionRequestSchema)` to create a new message.
 */
export declare const UpdateTeamDivisionRequestSchema: GenMessage<UpdateTeamDivisionRequest>;

/**
 * @generated from message teams.v1.private.UpdateTeamDivisionResponse
 */
export declare type UpdateTeamDivisionResponse = Message<"teams.v1.private.UpdateTeamDivisionResponse"> & {
};

/**
 * Describes the message teams.v1.private.UpdateTeamDivisionResponse.
 * Use `create(UpdateTeamDivisionResponseSchema)` to create a new message.
 */
export declare const UpdateTeamDivisionResponseSchema: GenMessage<UpdateTeamDivisionResponse>;

/**
 * @generated from enum teams.v1.private.SortDirection
 */
export enum SortDirection {
  /**
   * @generated from enum value: ASC = 0;
   */
  ASC = 0,

  /**
   * @generated from enum value: DESC = 1;
   */
  DESC = 1,
}

/**
 * Describes the enum teams.v1.private.SortDirection.
 */
export declare const SortDirectionSchema: GenEnum<SortDirection>;

/**
 * @generated from service teams.v1.private.PrivateTeamsService
 */
export declare const PrivateTeamsService: GenService<{
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.AddTeam
   */
  addTeam: {
    methodKind: "unary";
    input: typeof AddTeamRequestSchema;
    output: typeof AddTeamResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.ListTeams
   */
  listTeams: {
    methodKind: "unary";
    input: typeof ListTeamsRequestSchema;
    output: typeof ListTeamsResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.GetTeam
   */
  getTeam: {
    methodKind: "unary";
    input: typeof GetTeamRequestSchema;
    output: typeof GetTeamResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.RemoveTeams
   */
  removeTeams: {
    methodKind: "unary";
    input: typeof RemoveTeamsRequestSchema;
    output: typeof RemoveTeamsResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.UpdateTeam
   */
  updateTeam: {
    methodKind: "unary";
    input: typeof UpdateTeamRequestSchema;
    output: typeof UpdateTeamResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.AssociatePlayersToTeams
   */
  associatePlayersToTeams: {
    methodKind: "unary";
    input: typeof AssociatePlayersToTeamsRequestSchema;
    output: typeof AssociatePlayersToTeamsResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.DissociatePlayersFromTeams
   */
  dissociatePlayersFromTeams: {
    methodKind: "unary";
    input: typeof DissociatePlayersFromTeamsRequestSchema;
    output: typeof DissociatePlayersFromTeamsResponseSchema;
  },
  /**
   * @generated from rpc teams.v1.private.PrivateTeamsService.UpdateTeamDivision
   */
  updateTeamDivision: {
    methodKind: "unary";
    input: typeof UpdateTeamDivisionRequestSchema;
    output: typeof UpdateTeamDivisionResponseSchema;
  },
}>;

