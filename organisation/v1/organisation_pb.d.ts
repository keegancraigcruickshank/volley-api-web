// @generated by protoc-gen-es v0.2.0 with parameter "target=js+dts"
// @generated from file organisation/v1/organisation.proto (package organisation.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message organisation.v1.CreateOrganisationRequest
 */
export declare class CreateOrganisationRequest extends Message<CreateOrganisationRequest> {
  /**
   * @generated from field: string org_name = 1;
   */
  orgName: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: string password = 5;
   */
  password: string;

  constructor(data?: PartialMessage<CreateOrganisationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "organisation.v1.CreateOrganisationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganisationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganisationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganisationRequest;

  static equals(a: CreateOrganisationRequest | PlainMessage<CreateOrganisationRequest> | undefined, b: CreateOrganisationRequest | PlainMessage<CreateOrganisationRequest> | undefined): boolean;
}

/**
 * @generated from message organisation.v1.CreateOrganisationResponse
 */
export declare class CreateOrganisationResponse extends Message<CreateOrganisationResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * @generated from field: int32 expiry = 3;
   */
  expiry: number;

  /**
   * @generated from field: string token_type = 4;
   */
  tokenType: string;

  constructor(data?: PartialMessage<CreateOrganisationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "organisation.v1.CreateOrganisationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganisationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganisationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganisationResponse;

  static equals(a: CreateOrganisationResponse | PlainMessage<CreateOrganisationResponse> | undefined, b: CreateOrganisationResponse | PlainMessage<CreateOrganisationResponse> | undefined): boolean;
}

/**
 * @generated from message organisation.v1.OrgDoesExistRequest
 */
export declare class OrgDoesExistRequest extends Message<OrgDoesExistRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * @generated from field: string secret = 2;
   */
  secret: string;

  constructor(data?: PartialMessage<OrgDoesExistRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "organisation.v1.OrgDoesExistRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrgDoesExistRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrgDoesExistRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrgDoesExistRequest;

  static equals(a: OrgDoesExistRequest | PlainMessage<OrgDoesExistRequest> | undefined, b: OrgDoesExistRequest | PlainMessage<OrgDoesExistRequest> | undefined): boolean;
}

/**
 * @generated from message organisation.v1.OrgDoesExistResponse
 */
export declare class OrgDoesExistResponse extends Message<OrgDoesExistResponse> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  constructor(data?: PartialMessage<OrgDoesExistResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "organisation.v1.OrgDoesExistResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrgDoesExistResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrgDoesExistResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrgDoesExistResponse;

  static equals(a: OrgDoesExistResponse | PlainMessage<OrgDoesExistResponse> | undefined, b: OrgDoesExistResponse | PlainMessage<OrgDoesExistResponse> | undefined): boolean;
}

