// @generated by protoc-gen-es v2.1.0 with parameter "target=js+dts"
// @generated from file divisions/v1/private/divisions.proto (package divisions.v1.private, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file divisions/v1/private/divisions.proto.
 */
export declare const file_divisions_v1_private_divisions: GenFile;

/**
 * @generated from message divisions.v1.private.GameSettings
 */
export declare type GameSettings = Message<"divisions.v1.private.GameSettings"> & {
  /**
   * @generated from field: int32 duration = 1;
   */
  duration: number;

  /**
   * @generated from field: int32 buffer = 2;
   */
  buffer: number;

  /**
   * @generated from field: int32 break = 3;
   */
  break: number;
};

/**
 * Describes the message divisions.v1.private.GameSettings.
 * Use `create(GameSettingsSchema)` to create a new message.
 */
export declare const GameSettingsSchema: GenMessage<GameSettings>;

/**
 * @generated from message divisions.v1.private.Bound
 */
export declare type Bound = Message<"divisions.v1.private.Bound"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string day = 2;
   */
  day: string;

  /**
   * @generated from field: int32 lower_bound = 3;
   */
  lowerBound: number;

  /**
   * @generated from field: int32 upper_bound = 4;
   */
  upperBound: number;
};

/**
 * Describes the message divisions.v1.private.Bound.
 * Use `create(BoundSchema)` to create a new message.
 */
export declare const BoundSchema: GenMessage<Bound>;

/**
 * @generated from message divisions.v1.private.PlayingSpaceWithBounds
 */
export declare type PlayingSpaceWithBounds = Message<"divisions.v1.private.PlayingSpaceWithBounds"> & {
  /**
   * @generated from field: string playing_space_id = 1;
   */
  playingSpaceId: string;

  /**
   * @generated from field: repeated divisions.v1.private.Bound bounds = 2;
   */
  bounds: Bound[];
};

/**
 * Describes the message divisions.v1.private.PlayingSpaceWithBounds.
 * Use `create(PlayingSpaceWithBoundsSchema)` to create a new message.
 */
export declare const PlayingSpaceWithBoundsSchema: GenMessage<PlayingSpaceWithBounds>;

/**
 * @generated from message divisions.v1.private.Division
 */
export declare type Division = Message<"divisions.v1.private.Division"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated divisions.v1.private.PlayingSpaceWithBounds playing_spaces = 3;
   */
  playingSpaces: PlayingSpaceWithBounds[];

  /**
   * @generated from field: int32 modified = 4;
   */
  modified: number;

  /**
   * @generated from field: divisions.v1.private.GameSettings game_settings = 5;
   */
  gameSettings?: GameSettings;
};

/**
 * Describes the message divisions.v1.private.Division.
 * Use `create(DivisionSchema)` to create a new message.
 */
export declare const DivisionSchema: GenMessage<Division>;

/**
 * @generated from message divisions.v1.private.AddDivisionRequest
 */
export declare type AddDivisionRequest = Message<"divisions.v1.private.AddDivisionRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated divisions.v1.private.PlayingSpaceWithBounds playing_spaces = 2;
   */
  playingSpaces: PlayingSpaceWithBounds[];

  /**
   * @generated from field: divisions.v1.private.GameSettings game_settings = 3;
   */
  gameSettings?: GameSettings;
};

/**
 * Describes the message divisions.v1.private.AddDivisionRequest.
 * Use `create(AddDivisionRequestSchema)` to create a new message.
 */
export declare const AddDivisionRequestSchema: GenMessage<AddDivisionRequest>;

/**
 * @generated from message divisions.v1.private.AddDivisionResponse
 */
export declare type AddDivisionResponse = Message<"divisions.v1.private.AddDivisionResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message divisions.v1.private.AddDivisionResponse.
 * Use `create(AddDivisionResponseSchema)` to create a new message.
 */
export declare const AddDivisionResponseSchema: GenMessage<AddDivisionResponse>;

/**
 * @generated from message divisions.v1.private.UpdateDivisionRequest
 */
export declare type UpdateDivisionRequest = Message<"divisions.v1.private.UpdateDivisionRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated divisions.v1.private.PlayingSpaceWithBounds playing_spaces = 3;
   */
  playingSpaces: PlayingSpaceWithBounds[];

  /**
   * @generated from field: divisions.v1.private.GameSettings game_settings = 4;
   */
  gameSettings?: GameSettings;
};

/**
 * Describes the message divisions.v1.private.UpdateDivisionRequest.
 * Use `create(UpdateDivisionRequestSchema)` to create a new message.
 */
export declare const UpdateDivisionRequestSchema: GenMessage<UpdateDivisionRequest>;

/**
 * @generated from message divisions.v1.private.UpdateDivisionResponse
 */
export declare type UpdateDivisionResponse = Message<"divisions.v1.private.UpdateDivisionResponse"> & {
};

/**
 * Describes the message divisions.v1.private.UpdateDivisionResponse.
 * Use `create(UpdateDivisionResponseSchema)` to create a new message.
 */
export declare const UpdateDivisionResponseSchema: GenMessage<UpdateDivisionResponse>;

/**
 * @generated from message divisions.v1.private.GetDivisionRequest
 */
export declare type GetDivisionRequest = Message<"divisions.v1.private.GetDivisionRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message divisions.v1.private.GetDivisionRequest.
 * Use `create(GetDivisionRequestSchema)` to create a new message.
 */
export declare const GetDivisionRequestSchema: GenMessage<GetDivisionRequest>;

/**
 * @generated from message divisions.v1.private.GetDivisionResponse
 */
export declare type GetDivisionResponse = Message<"divisions.v1.private.GetDivisionResponse"> & {
  /**
   * @generated from field: divisions.v1.private.Division division = 1;
   */
  division?: Division;

  /**
   * @generated from field: int32 teamCount = 2;
   */
  teamCount: number;
};

/**
 * Describes the message divisions.v1.private.GetDivisionResponse.
 * Use `create(GetDivisionResponseSchema)` to create a new message.
 */
export declare const GetDivisionResponseSchema: GenMessage<GetDivisionResponse>;

/**
 * @generated from message divisions.v1.private.ListDivisionsFilter
 */
export declare type ListDivisionsFilter = Message<"divisions.v1.private.ListDivisionsFilter"> & {
  /**
   * @generated from field: repeated string playing_space_ids = 1;
   */
  playingSpaceIds: string[];

  /**
   * @generated from field: repeated string division_ids = 2;
   */
  divisionIds: string[];
};

/**
 * Describes the message divisions.v1.private.ListDivisionsFilter.
 * Use `create(ListDivisionsFilterSchema)` to create a new message.
 */
export declare const ListDivisionsFilterSchema: GenMessage<ListDivisionsFilter>;

/**
 * @generated from message divisions.v1.private.ListDivisionsRequest
 */
export declare type ListDivisionsRequest = Message<"divisions.v1.private.ListDivisionsRequest"> & {
  /**
   * @generated from field: optional string query = 1;
   */
  query?: string;

  /**
   * @generated from field: optional int32 page = 2;
   */
  page?: number;

  /**
   * @generated from field: optional int32 pageSize = 3;
   */
  pageSize?: number;

  /**
   * @generated from field: optional divisions.v1.private.SortDirection sortDirection = 4;
   */
  sortDirection?: SortDirection;

  /**
   * @generated from field: optional divisions.v1.private.ListDivisionsFilter filter = 5;
   */
  filter?: ListDivisionsFilter;
};

/**
 * Describes the message divisions.v1.private.ListDivisionsRequest.
 * Use `create(ListDivisionsRequestSchema)` to create a new message.
 */
export declare const ListDivisionsRequestSchema: GenMessage<ListDivisionsRequest>;

/**
 * @generated from message divisions.v1.private.ListDivisionsResponse
 */
export declare type ListDivisionsResponse = Message<"divisions.v1.private.ListDivisionsResponse"> & {
  /**
   * @generated from field: repeated divisions.v1.private.Division divisions = 1;
   */
  divisions: Division[];

  /**
   * @generated from field: int32 totalCount = 2;
   */
  totalCount: number;
};

/**
 * Describes the message divisions.v1.private.ListDivisionsResponse.
 * Use `create(ListDivisionsResponseSchema)` to create a new message.
 */
export declare const ListDivisionsResponseSchema: GenMessage<ListDivisionsResponse>;

/**
 * @generated from message divisions.v1.private.RemoveDivisionsRequest
 */
export declare type RemoveDivisionsRequest = Message<"divisions.v1.private.RemoveDivisionsRequest"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message divisions.v1.private.RemoveDivisionsRequest.
 * Use `create(RemoveDivisionsRequestSchema)` to create a new message.
 */
export declare const RemoveDivisionsRequestSchema: GenMessage<RemoveDivisionsRequest>;

/**
 * @generated from message divisions.v1.private.RemoveDivisionsResponse
 */
export declare type RemoveDivisionsResponse = Message<"divisions.v1.private.RemoveDivisionsResponse"> & {
};

/**
 * Describes the message divisions.v1.private.RemoveDivisionsResponse.
 * Use `create(RemoveDivisionsResponseSchema)` to create a new message.
 */
export declare const RemoveDivisionsResponseSchema: GenMessage<RemoveDivisionsResponse>;

/**
 * @generated from enum divisions.v1.private.SortDirection
 */
export enum SortDirection {
  /**
   * @generated from enum value: ASC = 0;
   */
  ASC = 0,

  /**
   * @generated from enum value: DESC = 1;
   */
  DESC = 1,
}

/**
 * Describes the enum divisions.v1.private.SortDirection.
 */
export declare const SortDirectionSchema: GenEnum<SortDirection>;

/**
 * @generated from service divisions.v1.private.PrivateDivisionsService
 */
export declare const PrivateDivisionsService: GenService<{
  /**
   * @generated from rpc divisions.v1.private.PrivateDivisionsService.AddDivision
   */
  addDivision: {
    methodKind: "unary";
    input: typeof AddDivisionRequestSchema;
    output: typeof AddDivisionResponseSchema;
  },
  /**
   * @generated from rpc divisions.v1.private.PrivateDivisionsService.RemoveDivisions
   */
  removeDivisions: {
    methodKind: "unary";
    input: typeof RemoveDivisionsRequestSchema;
    output: typeof RemoveDivisionsResponseSchema;
  },
  /**
   * @generated from rpc divisions.v1.private.PrivateDivisionsService.ListDivisions
   */
  listDivisions: {
    methodKind: "unary";
    input: typeof ListDivisionsRequestSchema;
    output: typeof ListDivisionsResponseSchema;
  },
  /**
   * @generated from rpc divisions.v1.private.PrivateDivisionsService.UpdateDivision
   */
  updateDivision: {
    methodKind: "unary";
    input: typeof UpdateDivisionRequestSchema;
    output: typeof UpdateDivisionResponseSchema;
  },
  /**
   * @generated from rpc divisions.v1.private.PrivateDivisionsService.GetDivision
   */
  getDivision: {
    methodKind: "unary";
    input: typeof GetDivisionRequestSchema;
    output: typeof GetDivisionResponseSchema;
  },
}>;

