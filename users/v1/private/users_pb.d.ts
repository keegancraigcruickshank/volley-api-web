// @generated by protoc-gen-es v2.1.0 with parameter "target=js+dts"
// @generated from file users/v1/private/users.proto (package users.v1.private, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file users/v1/private/users.proto.
 */
export declare const file_users_v1_private_users: GenFile;

/**
 * @generated from message users.v1.private.User
 */
export declare type User = Message<"users.v1.private.User"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: repeated string org_ids = 5;
   */
  orgIds: string[];

  /**
   * @generated from field: int32 last_logout = 6;
   */
  lastLogout: number;

  /**
   * @generated from field: int32 created_at = 7;
   */
  createdAt: number;

  /**
   * @generated from field: int32 updated_at = 8;
   */
  updatedAt: number;

  /**
   * @generated from field: string default_org = 9;
   */
  defaultOrg: string;

  /**
   * @generated from field: string active_org = 10;
   */
  activeOrg: string;

  /**
   * @generated from field: string active_org_name = 11;
   */
  activeOrgName: string;

  /**
   * @generated from field: bool verified = 12;
   */
  verified: boolean;
};

/**
 * Describes the message users.v1.private.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from message users.v1.private.Organisation
 */
export declare type Organisation = Message<"users.v1.private.Organisation"> & {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message users.v1.private.Organisation.
 * Use `create(OrganisationSchema)` to create a new message.
 */
export declare const OrganisationSchema: GenMessage<Organisation>;

/**
 * @generated from message users.v1.private.ApiToken
 */
export declare type ApiToken = Message<"users.v1.private.ApiToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 last_modified = 3;
   */
  lastModified: number;
};

/**
 * Describes the message users.v1.private.ApiToken.
 * Use `create(ApiTokenSchema)` to create a new message.
 */
export declare const ApiTokenSchema: GenMessage<ApiToken>;

/**
 * @generated from message users.v1.private.SetDefaultOrgRequest
 */
export declare type SetDefaultOrgRequest = Message<"users.v1.private.SetDefaultOrgRequest"> & {
  /**
   * @generated from field: string default_org = 1;
   */
  defaultOrg: string;
};

/**
 * Describes the message users.v1.private.SetDefaultOrgRequest.
 * Use `create(SetDefaultOrgRequestSchema)` to create a new message.
 */
export declare const SetDefaultOrgRequestSchema: GenMessage<SetDefaultOrgRequest>;

/**
 * @generated from message users.v1.private.SetDefaultOrgResponse
 */
export declare type SetDefaultOrgResponse = Message<"users.v1.private.SetDefaultOrgResponse"> & {
};

/**
 * Describes the message users.v1.private.SetDefaultOrgResponse.
 * Use `create(SetDefaultOrgResponseSchema)` to create a new message.
 */
export declare const SetDefaultOrgResponseSchema: GenMessage<SetDefaultOrgResponse>;

/**
 * @generated from message users.v1.private.GetMeRequest
 */
export declare type GetMeRequest = Message<"users.v1.private.GetMeRequest"> & {
};

/**
 * Describes the message users.v1.private.GetMeRequest.
 * Use `create(GetMeRequestSchema)` to create a new message.
 */
export declare const GetMeRequestSchema: GenMessage<GetMeRequest>;

/**
 * @generated from message users.v1.private.GetMeResponse
 */
export declare type GetMeResponse = Message<"users.v1.private.GetMeResponse"> & {
  /**
   * @generated from field: users.v1.private.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message users.v1.private.GetMeResponse.
 * Use `create(GetMeResponseSchema)` to create a new message.
 */
export declare const GetMeResponseSchema: GenMessage<GetMeResponse>;

/**
 * @generated from message users.v1.private.UpdateMeRequest
 */
export declare type UpdateMeRequest = Message<"users.v1.private.UpdateMeRequest"> & {
  /**
   * @generated from field: optional string given_name = 1;
   */
  givenName?: string;

  /**
   * @generated from field: optional string family_name = 2;
   */
  familyName?: string;

  /**
   * @generated from field: optional string email = 3;
   */
  email?: string;
};

/**
 * Describes the message users.v1.private.UpdateMeRequest.
 * Use `create(UpdateMeRequestSchema)` to create a new message.
 */
export declare const UpdateMeRequestSchema: GenMessage<UpdateMeRequest>;

/**
 * @generated from message users.v1.private.UpdateMeResponse
 */
export declare type UpdateMeResponse = Message<"users.v1.private.UpdateMeResponse"> & {
};

/**
 * Describes the message users.v1.private.UpdateMeResponse.
 * Use `create(UpdateMeResponseSchema)` to create a new message.
 */
export declare const UpdateMeResponseSchema: GenMessage<UpdateMeResponse>;

/**
 * @generated from message users.v1.private.LogoutRequest
 */
export declare type LogoutRequest = Message<"users.v1.private.LogoutRequest"> & {
};

/**
 * Describes the message users.v1.private.LogoutRequest.
 * Use `create(LogoutRequestSchema)` to create a new message.
 */
export declare const LogoutRequestSchema: GenMessage<LogoutRequest>;

/**
 * @generated from message users.v1.private.LogoutResponse
 */
export declare type LogoutResponse = Message<"users.v1.private.LogoutResponse"> & {
};

/**
 * Describes the message users.v1.private.LogoutResponse.
 * Use `create(LogoutResponseSchema)` to create a new message.
 */
export declare const LogoutResponseSchema: GenMessage<LogoutResponse>;

/**
 * @generated from message users.v1.private.SetActiveOrgRequest
 */
export declare type SetActiveOrgRequest = Message<"users.v1.private.SetActiveOrgRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message users.v1.private.SetActiveOrgRequest.
 * Use `create(SetActiveOrgRequestSchema)` to create a new message.
 */
export declare const SetActiveOrgRequestSchema: GenMessage<SetActiveOrgRequest>;

/**
 * @generated from message users.v1.private.SetActiveOrgResponse
 */
export declare type SetActiveOrgResponse = Message<"users.v1.private.SetActiveOrgResponse"> & {
};

/**
 * Describes the message users.v1.private.SetActiveOrgResponse.
 * Use `create(SetActiveOrgResponseSchema)` to create a new message.
 */
export declare const SetActiveOrgResponseSchema: GenMessage<SetActiveOrgResponse>;

/**
 * @generated from message users.v1.private.ResendVerificationRequest
 */
export declare type ResendVerificationRequest = Message<"users.v1.private.ResendVerificationRequest"> & {
};

/**
 * Describes the message users.v1.private.ResendVerificationRequest.
 * Use `create(ResendVerificationRequestSchema)` to create a new message.
 */
export declare const ResendVerificationRequestSchema: GenMessage<ResendVerificationRequest>;

/**
 * @generated from message users.v1.private.ResendVerificationResponse
 */
export declare type ResendVerificationResponse = Message<"users.v1.private.ResendVerificationResponse"> & {
};

/**
 * Describes the message users.v1.private.ResendVerificationResponse.
 * Use `create(ResendVerificationResponseSchema)` to create a new message.
 */
export declare const ResendVerificationResponseSchema: GenMessage<ResendVerificationResponse>;

/**
 * @generated from message users.v1.private.CreateApiTokenRequest
 */
export declare type CreateApiTokenRequest = Message<"users.v1.private.CreateApiTokenRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message users.v1.private.CreateApiTokenRequest.
 * Use `create(CreateApiTokenRequestSchema)` to create a new message.
 */
export declare const CreateApiTokenRequestSchema: GenMessage<CreateApiTokenRequest>;

/**
 * @generated from message users.v1.private.CreateApiTokenResponse
 */
export declare type CreateApiTokenResponse = Message<"users.v1.private.CreateApiTokenResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message users.v1.private.CreateApiTokenResponse.
 * Use `create(CreateApiTokenResponseSchema)` to create a new message.
 */
export declare const CreateApiTokenResponseSchema: GenMessage<CreateApiTokenResponse>;

/**
 * @generated from message users.v1.private.ListApiTokensRequest
 */
export declare type ListApiTokensRequest = Message<"users.v1.private.ListApiTokensRequest"> & {
};

/**
 * Describes the message users.v1.private.ListApiTokensRequest.
 * Use `create(ListApiTokensRequestSchema)` to create a new message.
 */
export declare const ListApiTokensRequestSchema: GenMessage<ListApiTokensRequest>;

/**
 * @generated from message users.v1.private.ListApiTokensResponse
 */
export declare type ListApiTokensResponse = Message<"users.v1.private.ListApiTokensResponse"> & {
  /**
   * @generated from field: repeated users.v1.private.ApiToken tokens = 1;
   */
  tokens: ApiToken[];
};

/**
 * Describes the message users.v1.private.ListApiTokensResponse.
 * Use `create(ListApiTokensResponseSchema)` to create a new message.
 */
export declare const ListApiTokensResponseSchema: GenMessage<ListApiTokensResponse>;

/**
 * @generated from message users.v1.private.RemoveApiTokenRequest
 */
export declare type RemoveApiTokenRequest = Message<"users.v1.private.RemoveApiTokenRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message users.v1.private.RemoveApiTokenRequest.
 * Use `create(RemoveApiTokenRequestSchema)` to create a new message.
 */
export declare const RemoveApiTokenRequestSchema: GenMessage<RemoveApiTokenRequest>;

/**
 * @generated from message users.v1.private.RemoveApiTokenResponse
 */
export declare type RemoveApiTokenResponse = Message<"users.v1.private.RemoveApiTokenResponse"> & {
};

/**
 * Describes the message users.v1.private.RemoveApiTokenResponse.
 * Use `create(RemoveApiTokenResponseSchema)` to create a new message.
 */
export declare const RemoveApiTokenResponseSchema: GenMessage<RemoveApiTokenResponse>;

/**
 * @generated from message users.v1.private.ListOrganisationsRequest
 */
export declare type ListOrganisationsRequest = Message<"users.v1.private.ListOrganisationsRequest"> & {
};

/**
 * Describes the message users.v1.private.ListOrganisationsRequest.
 * Use `create(ListOrganisationsRequestSchema)` to create a new message.
 */
export declare const ListOrganisationsRequestSchema: GenMessage<ListOrganisationsRequest>;

/**
 * @generated from message users.v1.private.ListOrganisationsResponse
 */
export declare type ListOrganisationsResponse = Message<"users.v1.private.ListOrganisationsResponse"> & {
  /**
   * @generated from field: repeated users.v1.private.Organisation organisations = 1;
   */
  organisations: Organisation[];
};

/**
 * Describes the message users.v1.private.ListOrganisationsResponse.
 * Use `create(ListOrganisationsResponseSchema)` to create a new message.
 */
export declare const ListOrganisationsResponseSchema: GenMessage<ListOrganisationsResponse>;

/**
 * @generated from message users.v1.private.CreateNewOrganisationRequest
 */
export declare type CreateNewOrganisationRequest = Message<"users.v1.private.CreateNewOrganisationRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message users.v1.private.CreateNewOrganisationRequest.
 * Use `create(CreateNewOrganisationRequestSchema)` to create a new message.
 */
export declare const CreateNewOrganisationRequestSchema: GenMessage<CreateNewOrganisationRequest>;

/**
 * @generated from message users.v1.private.CreateNewOrganisationResponse
 */
export declare type CreateNewOrganisationResponse = Message<"users.v1.private.CreateNewOrganisationResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message users.v1.private.CreateNewOrganisationResponse.
 * Use `create(CreateNewOrganisationResponseSchema)` to create a new message.
 */
export declare const CreateNewOrganisationResponseSchema: GenMessage<CreateNewOrganisationResponse>;

/**
 * @generated from message users.v1.private.DeleteOrganisationRequest
 */
export declare type DeleteOrganisationRequest = Message<"users.v1.private.DeleteOrganisationRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message users.v1.private.DeleteOrganisationRequest.
 * Use `create(DeleteOrganisationRequestSchema)` to create a new message.
 */
export declare const DeleteOrganisationRequestSchema: GenMessage<DeleteOrganisationRequest>;

/**
 * @generated from message users.v1.private.DeleteOrganisationResponse
 */
export declare type DeleteOrganisationResponse = Message<"users.v1.private.DeleteOrganisationResponse"> & {
};

/**
 * Describes the message users.v1.private.DeleteOrganisationResponse.
 * Use `create(DeleteOrganisationResponseSchema)` to create a new message.
 */
export declare const DeleteOrganisationResponseSchema: GenMessage<DeleteOrganisationResponse>;

/**
 * @generated from message users.v1.private.FreshUserSetupRequest
 */
export declare type FreshUserSetupRequest = Message<"users.v1.private.FreshUserSetupRequest"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string org_name = 3;
   */
  orgName: string;
};

/**
 * Describes the message users.v1.private.FreshUserSetupRequest.
 * Use `create(FreshUserSetupRequestSchema)` to create a new message.
 */
export declare const FreshUserSetupRequestSchema: GenMessage<FreshUserSetupRequest>;

/**
 * @generated from message users.v1.private.FreshUserSetupResponse
 */
export declare type FreshUserSetupResponse = Message<"users.v1.private.FreshUserSetupResponse"> & {
};

/**
 * Describes the message users.v1.private.FreshUserSetupResponse.
 * Use `create(FreshUserSetupResponseSchema)` to create a new message.
 */
export declare const FreshUserSetupResponseSchema: GenMessage<FreshUserSetupResponse>;

/**
 * @generated from message users.v1.private.GetOrganisationRequest
 */
export declare type GetOrganisationRequest = Message<"users.v1.private.GetOrganisationRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message users.v1.private.GetOrganisationRequest.
 * Use `create(GetOrganisationRequestSchema)` to create a new message.
 */
export declare const GetOrganisationRequestSchema: GenMessage<GetOrganisationRequest>;

/**
 * @generated from message users.v1.private.GetOrganisationResponse
 */
export declare type GetOrganisationResponse = Message<"users.v1.private.GetOrganisationResponse"> & {
  /**
   * @generated from field: users.v1.private.Organisation organisation = 1;
   */
  organisation?: Organisation;
};

/**
 * Describes the message users.v1.private.GetOrganisationResponse.
 * Use `create(GetOrganisationResponseSchema)` to create a new message.
 */
export declare const GetOrganisationResponseSchema: GenMessage<GetOrganisationResponse>;

/**
 * @generated from message users.v1.private.GetBillingLinkRequest
 */
export declare type GetBillingLinkRequest = Message<"users.v1.private.GetBillingLinkRequest"> & {
};

/**
 * Describes the message users.v1.private.GetBillingLinkRequest.
 * Use `create(GetBillingLinkRequestSchema)` to create a new message.
 */
export declare const GetBillingLinkRequestSchema: GenMessage<GetBillingLinkRequest>;

/**
 * @generated from message users.v1.private.GetBillingLinkResponse
 */
export declare type GetBillingLinkResponse = Message<"users.v1.private.GetBillingLinkResponse"> & {
  /**
   * @generated from field: string URL = 1;
   */
  URL: string;
};

/**
 * Describes the message users.v1.private.GetBillingLinkResponse.
 * Use `create(GetBillingLinkResponseSchema)` to create a new message.
 */
export declare const GetBillingLinkResponseSchema: GenMessage<GetBillingLinkResponse>;

/**
 * @generated from message users.v1.private.GetSubscriptionRequest
 */
export declare type GetSubscriptionRequest = Message<"users.v1.private.GetSubscriptionRequest"> & {
};

/**
 * Describes the message users.v1.private.GetSubscriptionRequest.
 * Use `create(GetSubscriptionRequestSchema)` to create a new message.
 */
export declare const GetSubscriptionRequestSchema: GenMessage<GetSubscriptionRequest>;

/**
 * @generated from message users.v1.private.GetSubscriptionResponse
 */
export declare type GetSubscriptionResponse = Message<"users.v1.private.GetSubscriptionResponse"> & {
  /**
   * @generated from field: string subscription = 1;
   */
  subscription: string;
};

/**
 * Describes the message users.v1.private.GetSubscriptionResponse.
 * Use `create(GetSubscriptionResponseSchema)` to create a new message.
 */
export declare const GetSubscriptionResponseSchema: GenMessage<GetSubscriptionResponse>;

/**
 * @generated from service users.v1.private.PrivateUsersService
 */
export declare const PrivateUsersService: GenService<{
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.GetMe
   */
  getMe: {
    methodKind: "unary";
    input: typeof GetMeRequestSchema;
    output: typeof GetMeResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.GetBillingLink
   */
  getBillingLink: {
    methodKind: "unary";
    input: typeof GetBillingLinkRequestSchema;
    output: typeof GetBillingLinkResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.GetSubscription
   */
  getSubscription: {
    methodKind: "unary";
    input: typeof GetSubscriptionRequestSchema;
    output: typeof GetSubscriptionResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.UpdateMe
   */
  updateMe: {
    methodKind: "unary";
    input: typeof UpdateMeRequestSchema;
    output: typeof UpdateMeResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.SetDefaultOrg
   */
  setDefaultOrg: {
    methodKind: "unary";
    input: typeof SetDefaultOrgRequestSchema;
    output: typeof SetDefaultOrgResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.CreateApiToken
   */
  createApiToken: {
    methodKind: "unary";
    input: typeof CreateApiTokenRequestSchema;
    output: typeof CreateApiTokenResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.ListApiTokens
   */
  listApiTokens: {
    methodKind: "unary";
    input: typeof ListApiTokensRequestSchema;
    output: typeof ListApiTokensResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.RemoveApiToken
   */
  removeApiToken: {
    methodKind: "unary";
    input: typeof RemoveApiTokenRequestSchema;
    output: typeof RemoveApiTokenResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.ListOrganisations
   */
  listOrganisations: {
    methodKind: "unary";
    input: typeof ListOrganisationsRequestSchema;
    output: typeof ListOrganisationsResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.GetOrganisation
   */
  getOrganisation: {
    methodKind: "unary";
    input: typeof GetOrganisationRequestSchema;
    output: typeof GetOrganisationResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.CreateNewOrganisation
   */
  createNewOrganisation: {
    methodKind: "unary";
    input: typeof CreateNewOrganisationRequestSchema;
    output: typeof CreateNewOrganisationResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.FreshUserSetup
   */
  freshUserSetup: {
    methodKind: "unary";
    input: typeof FreshUserSetupRequestSchema;
    output: typeof FreshUserSetupResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.DeleteOrganisation
   */
  deleteOrganisation: {
    methodKind: "unary";
    input: typeof DeleteOrganisationRequestSchema;
    output: typeof DeleteOrganisationResponseSchema;
  },
  /**
   * @generated from rpc users.v1.private.PrivateUsersService.ResendVerification
   */
  resendVerification: {
    methodKind: "unary";
    input: typeof ResendVerificationRequestSchema;
    output: typeof ResendVerificationResponseSchema;
  },
}>;

