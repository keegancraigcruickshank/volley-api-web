// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=js+dts"
// @generated from file users/v1/private/users.proto (package users.v1.private, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { CreateApiTokenRequest, CreateApiTokenResponse, CreateNewOrganisationRequest, CreateNewOrganisationResponse, DeleteOrganisationRequest, DeleteOrganisationResponse, FreshUserSetupRequest, FreshUserSetupResponse, GetBillingLinkRequest, GetBillingLinkResponse, GetMeRequest, GetMeResponse, GetOrganisationRequest, GetOrganisationResponse, GetSubscriptionRequest, GetSubscriptionResponse, GetTokenRequest, GetTokenResponse, ListApiTokensRequest, ListApiTokensResponse, ListOrganisationsRequest, ListOrganisationsResponse, RemoveApiTokenRequest, RemoveApiTokenResponse, ResendVerificationRequest, ResendVerificationResponse, SetDefaultOrgRequest, SetDefaultOrgResponse, UpdateMeRequest, UpdateMeResponse } from "./users_pb.js";

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetToken
 */
export const getToken = {
  localName: "getToken",
  name: "GetToken",
  kind: MethodKind.Unary,
  I: GetTokenRequest,
  O: GetTokenResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetMe
 */
export const getMe = {
  localName: "getMe",
  name: "GetMe",
  kind: MethodKind.Unary,
  I: GetMeRequest,
  O: GetMeResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetBillingLink
 */
export const getBillingLink = {
  localName: "getBillingLink",
  name: "GetBillingLink",
  kind: MethodKind.Unary,
  I: GetBillingLinkRequest,
  O: GetBillingLinkResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetSubscription
 */
export const getSubscription = {
  localName: "getSubscription",
  name: "GetSubscription",
  kind: MethodKind.Unary,
  I: GetSubscriptionRequest,
  O: GetSubscriptionResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.UpdateMe
 */
export const updateMe = {
  localName: "updateMe",
  name: "UpdateMe",
  kind: MethodKind.Unary,
  I: UpdateMeRequest,
  O: UpdateMeResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.SetDefaultOrg
 */
export const setDefaultOrg = {
  localName: "setDefaultOrg",
  name: "SetDefaultOrg",
  kind: MethodKind.Unary,
  I: SetDefaultOrgRequest,
  O: SetDefaultOrgResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.CreateApiToken
 */
export const createApiToken = {
  localName: "createApiToken",
  name: "CreateApiToken",
  kind: MethodKind.Unary,
  I: CreateApiTokenRequest,
  O: CreateApiTokenResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.ListApiTokens
 */
export const listApiTokens = {
  localName: "listApiTokens",
  name: "ListApiTokens",
  kind: MethodKind.Unary,
  I: ListApiTokensRequest,
  O: ListApiTokensResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.RemoveApiToken
 */
export const removeApiToken = {
  localName: "removeApiToken",
  name: "RemoveApiToken",
  kind: MethodKind.Unary,
  I: RemoveApiTokenRequest,
  O: RemoveApiTokenResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.ListOrganisations
 */
export const listOrganisations = {
  localName: "listOrganisations",
  name: "ListOrganisations",
  kind: MethodKind.Unary,
  I: ListOrganisationsRequest,
  O: ListOrganisationsResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetOrganisation
 */
export const getOrganisation = {
  localName: "getOrganisation",
  name: "GetOrganisation",
  kind: MethodKind.Unary,
  I: GetOrganisationRequest,
  O: GetOrganisationResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.CreateNewOrganisation
 */
export const createNewOrganisation = {
  localName: "createNewOrganisation",
  name: "CreateNewOrganisation",
  kind: MethodKind.Unary,
  I: CreateNewOrganisationRequest,
  O: CreateNewOrganisationResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.FreshUserSetup
 */
export const freshUserSetup = {
  localName: "freshUserSetup",
  name: "FreshUserSetup",
  kind: MethodKind.Unary,
  I: FreshUserSetupRequest,
  O: FreshUserSetupResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.DeleteOrganisation
 */
export const deleteOrganisation = {
  localName: "deleteOrganisation",
  name: "DeleteOrganisation",
  kind: MethodKind.Unary,
  I: DeleteOrganisationRequest,
  O: DeleteOrganisationResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};

/**
 * @generated from rpc users.v1.private.PrivateUsersService.ResendVerification
 */
export const resendVerification = {
  localName: "resendVerification",
  name: "ResendVerification",
  kind: MethodKind.Unary,
  I: ResendVerificationRequest,
  O: ResendVerificationResponse,
  service: {
    typeName: "users.v1.private.PrivateUsersService"
  }
};
