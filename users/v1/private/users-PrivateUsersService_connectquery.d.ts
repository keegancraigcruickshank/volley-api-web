// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=js+dts"
// @generated from file users/v1/private/users.proto (package users.v1.private, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateApiTokenRequest, CreateApiTokenResponse, CreateNewOrganisationRequest, CreateNewOrganisationResponse, DeleteOrganisationRequest, DeleteOrganisationResponse, FreshUserSetupRequest, FreshUserSetupResponse, GetBillingLinkRequest, GetBillingLinkResponse, GetMeRequest, GetMeResponse, GetOrganisationRequest, GetOrganisationResponse, ListApiTokensRequest, ListApiTokensResponse, ListOrganisationsRequest, ListOrganisationsResponse, RemoveApiTokenRequest, RemoveApiTokenResponse, ResendVerificationRequest, ResendVerificationResponse, SetDefaultOrgRequest, SetDefaultOrgResponse, UpdateMeRequest, UpdateMeResponse } from "./users_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetMe
 */
export const getMe: {
      readonly name: "GetMe",
      readonly I: typeof GetMeRequest,
      readonly O: typeof GetMeResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetBillingLink
 */
export const getBillingLink: {
      readonly name: "GetBillingLink",
      readonly I: typeof GetBillingLinkRequest,
      readonly O: typeof GetBillingLinkResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.UpdateMe
 */
export const updateMe: {
      readonly name: "UpdateMe",
      readonly I: typeof UpdateMeRequest,
      readonly O: typeof UpdateMeResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.SetDefaultOrg
 */
export const setDefaultOrg: {
      readonly name: "SetDefaultOrg",
      readonly I: typeof SetDefaultOrgRequest,
      readonly O: typeof SetDefaultOrgResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.CreateApiToken
 */
export const createApiToken: {
      readonly name: "CreateApiToken",
      readonly I: typeof CreateApiTokenRequest,
      readonly O: typeof CreateApiTokenResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.ListApiTokens
 */
export const listApiTokens: {
      readonly name: "ListApiTokens",
      readonly I: typeof ListApiTokensRequest,
      readonly O: typeof ListApiTokensResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.RemoveApiToken
 */
export const removeApiToken: {
      readonly name: "RemoveApiToken",
      readonly I: typeof RemoveApiTokenRequest,
      readonly O: typeof RemoveApiTokenResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.ListOrganisations
 */
export const listOrganisations: {
      readonly name: "ListOrganisations",
      readonly I: typeof ListOrganisationsRequest,
      readonly O: typeof ListOrganisationsResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.GetOrganisation
 */
export const getOrganisation: {
      readonly name: "GetOrganisation",
      readonly I: typeof GetOrganisationRequest,
      readonly O: typeof GetOrganisationResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.CreateNewOrganisation
 */
export const createNewOrganisation: {
      readonly name: "CreateNewOrganisation",
      readonly I: typeof CreateNewOrganisationRequest,
      readonly O: typeof CreateNewOrganisationResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.FreshUserSetup
 */
export const freshUserSetup: {
      readonly name: "FreshUserSetup",
      readonly I: typeof FreshUserSetupRequest,
      readonly O: typeof FreshUserSetupResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.DeleteOrganisation
 */
export const deleteOrganisation: {
      readonly name: "DeleteOrganisation",
      readonly I: typeof DeleteOrganisationRequest,
      readonly O: typeof DeleteOrganisationResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
/**
 * @generated from rpc users.v1.private.PrivateUsersService.ResendVerification
 */
export const resendVerification: {
      readonly name: "ResendVerification",
      readonly I: typeof ResendVerificationRequest,
      readonly O: typeof ResendVerificationResponse,
      readonly kind: MethodKind.Unary,
  readonly service: {
    readonly typeName: "users.v1.private.PrivateUsersService"
  }
};
