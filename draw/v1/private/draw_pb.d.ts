// @generated by protoc-gen-es v1.8.0 with parameter "target=js+dts"
// @generated from file draw/v1/private/draw.proto (package draw.v1.private, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum draw.v1.private.DrawType
 */
export declare enum DrawType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: FLEXIBLE_ROUND_ROBIN = 1;
   */
  FLEXIBLE_ROUND_ROBIN = 1,
}

/**
 * @generated from message draw.v1.private.Draw
 */
export declare class Draw extends Message<Draw> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 modified = 4;
   */
  modified: number;

  /**
   * @generated from field: draw.v1.private.DrawType draw_type = 5;
   */
  drawType: DrawType;

  /**
   * @generated from field: int32 team_count = 6;
   */
  teamCount: number;

  constructor(data?: PartialMessage<Draw>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.Draw";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Draw;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Draw;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Draw;

  static equals(a: Draw | PlainMessage<Draw> | undefined, b: Draw | PlainMessage<Draw> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.Match
 */
export declare class Match extends Message<Match> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string draw_id = 2;
   */
  drawId: string;

  /**
   * @generated from field: int32 round = 3;
   */
  round: number;

  /**
   * @generated from field: string team_one = 4;
   */
  teamOne: string;

  /**
   * @generated from field: string team_two = 5;
   */
  teamTwo: string;

  /**
   * @generated from field: int32 team_one_score = 6;
   */
  teamOneScore: number;

  /**
   * @generated from field: int32 team_two_score = 7;
   */
  teamTwoScore: number;

  /**
   * @generated from field: int32 modified = 8;
   */
  modified: number;

  constructor(data?: PartialMessage<Match>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.Match";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Match;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Match;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Match;

  static equals(a: Match | PlainMessage<Match> | undefined, b: Match | PlainMessage<Match> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.CreateDrawRequest
 */
export declare class CreateDrawRequest extends Message<CreateDrawRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: draw.v1.private.DrawType draw_type = 2;
   */
  drawType: DrawType;

  /**
   * @generated from field: repeated string teams = 3;
   */
  teams: string[];

  constructor(data?: PartialMessage<CreateDrawRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.CreateDrawRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDrawRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDrawRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDrawRequest;

  static equals(a: CreateDrawRequest | PlainMessage<CreateDrawRequest> | undefined, b: CreateDrawRequest | PlainMessage<CreateDrawRequest> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.CreateDrawResponse
 */
export declare class CreateDrawResponse extends Message<CreateDrawResponse> {
  /**
   * @generated from field: draw.v1.private.Draw draw = 1;
   */
  draw?: Draw;

  constructor(data?: PartialMessage<CreateDrawResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.CreateDrawResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDrawResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDrawResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDrawResponse;

  static equals(a: CreateDrawResponse | PlainMessage<CreateDrawResponse> | undefined, b: CreateDrawResponse | PlainMessage<CreateDrawResponse> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.GetDrawRequest
 */
export declare class GetDrawRequest extends Message<GetDrawRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetDrawRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.GetDrawRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDrawRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDrawRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDrawRequest;

  static equals(a: GetDrawRequest | PlainMessage<GetDrawRequest> | undefined, b: GetDrawRequest | PlainMessage<GetDrawRequest> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.GetDrawResponse
 */
export declare class GetDrawResponse extends Message<GetDrawResponse> {
  /**
   * @generated from field: draw.v1.private.Draw draw = 1;
   */
  draw?: Draw;

  /**
   * @generated from field: repeated string teams = 2;
   */
  teams: string[];

  constructor(data?: PartialMessage<GetDrawResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.GetDrawResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDrawResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDrawResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDrawResponse;

  static equals(a: GetDrawResponse | PlainMessage<GetDrawResponse> | undefined, b: GetDrawResponse | PlainMessage<GetDrawResponse> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.UpdateDrawRequest
 */
export declare class UpdateDrawRequest extends Message<UpdateDrawRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated string teams = 3;
   */
  teams: string[];

  constructor(data?: PartialMessage<UpdateDrawRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.UpdateDrawRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDrawRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDrawRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDrawRequest;

  static equals(a: UpdateDrawRequest | PlainMessage<UpdateDrawRequest> | undefined, b: UpdateDrawRequest | PlainMessage<UpdateDrawRequest> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.UpdateDrawResponse
 */
export declare class UpdateDrawResponse extends Message<UpdateDrawResponse> {
  /**
   * @generated from field: draw.v1.private.Draw draw = 1;
   */
  draw?: Draw;

  constructor(data?: PartialMessage<UpdateDrawResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.UpdateDrawResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDrawResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDrawResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDrawResponse;

  static equals(a: UpdateDrawResponse | PlainMessage<UpdateDrawResponse> | undefined, b: UpdateDrawResponse | PlainMessage<UpdateDrawResponse> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.DeleteDrawRequest
 */
export declare class DeleteDrawRequest extends Message<DeleteDrawRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteDrawRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.DeleteDrawRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDrawRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDrawRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDrawRequest;

  static equals(a: DeleteDrawRequest | PlainMessage<DeleteDrawRequest> | undefined, b: DeleteDrawRequest | PlainMessage<DeleteDrawRequest> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.DeleteDrawResponse
 */
export declare class DeleteDrawResponse extends Message<DeleteDrawResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteDrawResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.DeleteDrawResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDrawResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDrawResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDrawResponse;

  static equals(a: DeleteDrawResponse | PlainMessage<DeleteDrawResponse> | undefined, b: DeleteDrawResponse | PlainMessage<DeleteDrawResponse> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.GetDrawRoundRequest
 */
export declare class GetDrawRoundRequest extends Message<GetDrawRoundRequest> {
  /**
   * @generated from field: string draw_id = 1;
   */
  drawId: string;

  /**
   * @generated from field: int32 round = 2;
   */
  round: number;

  constructor(data?: PartialMessage<GetDrawRoundRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.GetDrawRoundRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDrawRoundRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDrawRoundRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDrawRoundRequest;

  static equals(a: GetDrawRoundRequest | PlainMessage<GetDrawRoundRequest> | undefined, b: GetDrawRoundRequest | PlainMessage<GetDrawRoundRequest> | undefined): boolean;
}

/**
 * @generated from message draw.v1.private.GetDrawRoundResponse
 */
export declare class GetDrawRoundResponse extends Message<GetDrawRoundResponse> {
  /**
   * @generated from field: string draw_id = 1;
   */
  drawId: string;

  /**
   * @generated from field: int32 round = 2;
   */
  round: number;

  /**
   * @generated from field: repeated draw.v1.private.Match matches = 3;
   */
  matches: Match[];

  constructor(data?: PartialMessage<GetDrawRoundResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draw.v1.private.GetDrawRoundResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDrawRoundResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDrawRoundResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDrawRoundResponse;

  static equals(a: GetDrawRoundResponse | PlainMessage<GetDrawRoundResponse> | undefined, b: GetDrawRoundResponse | PlainMessage<GetDrawRoundResponse> | undefined): boolean;
}

