// @generated by protoc-gen-es v2.1.0 with parameter "target=js+dts"
// @generated from file draw/v1/private/draw.proto (package draw.v1.private, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { CreateFlexibleRoundRobinDrawRequestSchema, CreateFlexibleRoundRobinDrawResponseSchema, FlexibleRoundRobinDraw, FlexibleRoundRobinDrawChangeRoundDateRequestSchema, FlexibleRoundRobinDrawChangeRoundDateResponseSchema, GetFlexibleRoundRobinDrawLeaderboardRequestSchema, GetFlexibleRoundRobinDrawLeaderboardResponseSchema, GetFlexibleRoundRobinDrawRequestSchema, GetFlexibleRoundRobinDrawResponseSchema, GetFlexibleRoundRobinDrawRoundRequestSchema, GetFlexibleRoundRobinDrawRoundResponseSchema, SetFlexibleRoundRobinDrawFixtureScoreRequestSchema, SetFlexibleRoundRobinDrawFixtureScoreResponseSchema, UpdateFlexibleRoundRobinDrawRequestSchema, UpdateFlexibleRoundRobinDrawResponseSchema } from "./flexible-round-robin/flexible-round-robin_pb";

/**
 * Describes the file draw/v1/private/draw.proto.
 */
export declare const file_draw_v1_private_draw: GenFile;

/**
 * @generated from message draw.v1.private.Draw
 */
export declare type Draw = Message<"draw.v1.private.Draw"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp modified = 3;
   */
  modified?: Timestamp;

  /**
   * @generated from field: int32 type = 4;
   */
  type: number;
};

/**
 * Describes the message draw.v1.private.Draw.
 * Use `create(DrawSchema)` to create a new message.
 */
export declare const DrawSchema: GenMessage<Draw>;

/**
 * @generated from message draw.v1.private.GetDrawRequest
 */
export declare type GetDrawRequest = Message<"draw.v1.private.GetDrawRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message draw.v1.private.GetDrawRequest.
 * Use `create(GetDrawRequestSchema)` to create a new message.
 */
export declare const GetDrawRequestSchema: GenMessage<GetDrawRequest>;

/**
 * @generated from message draw.v1.private.GetDrawResponse
 */
export declare type GetDrawResponse = Message<"draw.v1.private.GetDrawResponse"> & {
  /**
   * @generated from oneof draw.v1.private.GetDrawResponse.draw
   */
  draw: {
    /**
     * @generated from field: draw.v1.private.draw.flexibleRoundRobin.FlexibleRoundRobinDraw flexible_round_robin_draw = 1;
     */
    value: FlexibleRoundRobinDraw;
    case: "flexibleRoundRobinDraw";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message draw.v1.private.GetDrawResponse.
 * Use `create(GetDrawResponseSchema)` to create a new message.
 */
export declare const GetDrawResponseSchema: GenMessage<GetDrawResponse>;

/**
 * @generated from message draw.v1.private.DeleteDrawRequest
 */
export declare type DeleteDrawRequest = Message<"draw.v1.private.DeleteDrawRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message draw.v1.private.DeleteDrawRequest.
 * Use `create(DeleteDrawRequestSchema)` to create a new message.
 */
export declare const DeleteDrawRequestSchema: GenMessage<DeleteDrawRequest>;

/**
 * @generated from message draw.v1.private.DeleteDrawResponse
 */
export declare type DeleteDrawResponse = Message<"draw.v1.private.DeleteDrawResponse"> & {
};

/**
 * Describes the message draw.v1.private.DeleteDrawResponse.
 * Use `create(DeleteDrawResponseSchema)` to create a new message.
 */
export declare const DeleteDrawResponseSchema: GenMessage<DeleteDrawResponse>;

/**
 * @generated from message draw.v1.private.ListDrawsRequest
 */
export declare type ListDrawsRequest = Message<"draw.v1.private.ListDrawsRequest"> & {
  /**
   * @generated from field: optional string query = 1;
   */
  query?: string;

  /**
   * @generated from field: optional int32 page = 2;
   */
  page?: number;

  /**
   * @generated from field: optional int32 pageSize = 3;
   */
  pageSize?: number;
};

/**
 * Describes the message draw.v1.private.ListDrawsRequest.
 * Use `create(ListDrawsRequestSchema)` to create a new message.
 */
export declare const ListDrawsRequestSchema: GenMessage<ListDrawsRequest>;

/**
 * @generated from message draw.v1.private.ListDrawsResponse
 */
export declare type ListDrawsResponse = Message<"draw.v1.private.ListDrawsResponse"> & {
  /**
   * @generated from field: repeated draw.v1.private.Draw draw = 1;
   */
  draw: Draw[];

  /**
   * @generated from field: int32 totalCount = 2;
   */
  totalCount: number;
};

/**
 * Describes the message draw.v1.private.ListDrawsResponse.
 * Use `create(ListDrawsResponseSchema)` to create a new message.
 */
export declare const ListDrawsResponseSchema: GenMessage<ListDrawsResponse>;

/**
 * @generated from enum draw.v1.private.DrawType
 */
export enum DrawType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: FLEXIBLE_ROUND_ROBIN = 1;
   */
  FLEXIBLE_ROUND_ROBIN = 1,
}

/**
 * Describes the enum draw.v1.private.DrawType.
 */
export declare const DrawTypeSchema: GenEnum<DrawType>;

/**
 * @generated from service draw.v1.private.PrivateDrawService
 */
export declare const PrivateDrawService: GenService<{
  /**
   * Common endpoints
   *
   * @generated from rpc draw.v1.private.PrivateDrawService.GetDraw
   */
  getDraw: {
    methodKind: "unary";
    input: typeof GetDrawRequestSchema;
    output: typeof GetDrawResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.DeleteDraw
   */
  deleteDraw: {
    methodKind: "unary";
    input: typeof DeleteDrawRequestSchema;
    output: typeof DeleteDrawResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.ListDraws
   */
  listDraws: {
    methodKind: "unary";
    input: typeof ListDrawsRequestSchema;
    output: typeof ListDrawsResponseSchema;
  },
  /**
   * Flexible round robin
   *
   * @generated from rpc draw.v1.private.PrivateDrawService.CreateFlexibleRoundRobinDraw
   */
  createFlexibleRoundRobinDraw: {
    methodKind: "unary";
    input: typeof CreateFlexibleRoundRobinDrawRequestSchema;
    output: typeof CreateFlexibleRoundRobinDrawResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.GetFlexibleRoundRobinDraw
   */
  getFlexibleRoundRobinDraw: {
    methodKind: "unary";
    input: typeof GetFlexibleRoundRobinDrawRequestSchema;
    output: typeof GetFlexibleRoundRobinDrawResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.UpdateFlexibleRoundRobinDraw
   */
  updateFlexibleRoundRobinDraw: {
    methodKind: "unary";
    input: typeof UpdateFlexibleRoundRobinDrawRequestSchema;
    output: typeof UpdateFlexibleRoundRobinDrawResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.GetFlexibleRoundRobinDrawRound
   */
  getFlexibleRoundRobinDrawRound: {
    methodKind: "unary";
    input: typeof GetFlexibleRoundRobinDrawRoundRequestSchema;
    output: typeof GetFlexibleRoundRobinDrawRoundResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.GetFlexibleRoundRobinDrawLeaderboard
   */
  getFlexibleRoundRobinDrawLeaderboard: {
    methodKind: "unary";
    input: typeof GetFlexibleRoundRobinDrawLeaderboardRequestSchema;
    output: typeof GetFlexibleRoundRobinDrawLeaderboardResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.FlexibleRoundRobinDrawChangeRoundDate
   */
  flexibleRoundRobinDrawChangeRoundDate: {
    methodKind: "unary";
    input: typeof FlexibleRoundRobinDrawChangeRoundDateRequestSchema;
    output: typeof FlexibleRoundRobinDrawChangeRoundDateResponseSchema;
  },
  /**
   * @generated from rpc draw.v1.private.PrivateDrawService.SetFlexibleRoundRobinDrawFixtureScore
   */
  setFlexibleRoundRobinDrawFixtureScore: {
    methodKind: "unary";
    input: typeof SetFlexibleRoundRobinDrawFixtureScoreRequestSchema;
    output: typeof SetFlexibleRoundRobinDrawFixtureScoreResponseSchema;
  },
}>;

