// @generated by protoc-gen-es v0.2.0 with parameter "target=js+dts"
// @generated from file draw/v1/private/draw.proto (package draws.v1.private, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message draws.v1.private.DrawTeam
 */
export declare class DrawTeam extends Message<DrawTeam> {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: string team_name = 2;
   */
  teamName: string;

  constructor(data?: PartialMessage<DrawTeam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.DrawTeam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DrawTeam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DrawTeam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DrawTeam;

  static equals(a: DrawTeam | PlainMessage<DrawTeam> | undefined, b: DrawTeam | PlainMessage<DrawTeam> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.Court
 */
export declare class Court extends Message<Court> {
  /**
   * @generated from field: string court_id = 1;
   */
  courtId: string;

  /**
   * @generated from field: string court_name = 2;
   */
  courtName: string;

  constructor(data?: PartialMessage<Court>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.Court";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Court;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Court;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Court;

  static equals(a: Court | PlainMessage<Court> | undefined, b: Court | PlainMessage<Court> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.Game
 */
export declare class Game extends Message<Game> {
  /**
   * @generated from field: draws.v1.private.DrawTeam team_one = 1;
   */
  teamOne?: DrawTeam;

  /**
   * @generated from field: draws.v1.private.DrawTeam team_two = 2;
   */
  teamTwo?: DrawTeam;

  /**
   * @generated from field: string game_id = 3;
   */
  gameId: string;

  /**
   * @generated from field: draws.v1.private.Court court = 4;
   */
  court?: Court;

  /**
   * @generated from field: int32 timeslot = 5;
   */
  timeslot: number;

  constructor(data?: PartialMessage<Game>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.Game";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Game;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Game;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Game;

  static equals(a: Game | PlainMessage<Game> | undefined, b: Game | PlainMessage<Game> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.WeeklyDraw
 */
export declare class WeeklyDraw extends Message<WeeklyDraw> {
  /**
   * @generated from field: int64 week_starting = 1;
   */
  weekStarting: bigint;

  /**
   * @generated from field: repeated draws.v1.private.Game game = 2;
   */
  game: Game[];

  constructor(data?: PartialMessage<WeeklyDraw>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.WeeklyDraw";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WeeklyDraw;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WeeklyDraw;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WeeklyDraw;

  static equals(a: WeeklyDraw | PlainMessage<WeeklyDraw> | undefined, b: WeeklyDraw | PlainMessage<WeeklyDraw> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.DivisionDraw
 */
export declare class DivisionDraw extends Message<DivisionDraw> {
  /**
   * @generated from field: string grade_id = 1;
   */
  gradeId: string;

  /**
   * @generated from field: string day = 2;
   */
  day: string;

  /**
   * @generated from field: repeated draws.v1.private.WeeklyDraw weeks = 3;
   */
  weeks: WeeklyDraw[];

  /**
   * @generated from field: string division_draw_id = 4;
   */
  divisionDrawId: string;

  constructor(data?: PartialMessage<DivisionDraw>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.DivisionDraw";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DivisionDraw;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DivisionDraw;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DivisionDraw;

  static equals(a: DivisionDraw | PlainMessage<DivisionDraw> | undefined, b: DivisionDraw | PlainMessage<DivisionDraw> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.GeneratedDivisionDraw
 */
export declare class GeneratedDivisionDraw extends Message<GeneratedDivisionDraw> {
  /**
   * @generated from field: repeated draws.v1.private.DivisionDraw draw = 3;
   */
  draw: DivisionDraw[];

  constructor(data?: PartialMessage<GeneratedDivisionDraw>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.GeneratedDivisionDraw";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneratedDivisionDraw;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneratedDivisionDraw;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneratedDivisionDraw;

  static equals(a: GeneratedDivisionDraw | PlainMessage<GeneratedDivisionDraw> | undefined, b: GeneratedDivisionDraw | PlainMessage<GeneratedDivisionDraw> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.DrawDivision
 */
export declare class DrawDivision extends Message<DrawDivision> {
  /**
   * @generated from field: string grade_id = 1;
   */
  gradeId: string;

  /**
   * @generated from field: string day = 2;
   */
  day: string;

  /**
   * @generated from field: repeated string team_ids = 3;
   */
  teamIds: string[];

  constructor(data?: PartialMessage<DrawDivision>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.DrawDivision";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DrawDivision;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DrawDivision;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DrawDivision;

  static equals(a: DrawDivision | PlainMessage<DrawDivision> | undefined, b: DrawDivision | PlainMessage<DrawDivision> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.CreateDrawRequest
 */
export declare class CreateDrawRequest extends Message<CreateDrawRequest> {
  /**
   * @generated from field: repeated draws.v1.private.DrawDivision divisions = 1;
   */
  divisions: DrawDivision[];

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 season_length = 3;
   */
  seasonLength: number;

  /**
   * @generated from field: int64 start_date = 4;
   */
  startDate: bigint;

  constructor(data?: PartialMessage<CreateDrawRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.CreateDrawRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDrawRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDrawRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDrawRequest;

  static equals(a: CreateDrawRequest | PlainMessage<CreateDrawRequest> | undefined, b: CreateDrawRequest | PlainMessage<CreateDrawRequest> | undefined): boolean;
}

/**
 * @generated from message draws.v1.private.CreateDrawResponse
 */
export declare class CreateDrawResponse extends Message<CreateDrawResponse> {
  /**
   * @generated from field: repeated draws.v1.private.DrawDivision divisions = 1;
   */
  divisions: DrawDivision[];

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 season_length = 3;
   */
  seasonLength: number;

  /**
   * @generated from field: int64 start_date = 4;
   */
  startDate: bigint;

  /**
   * @generated from field: string id = 5;
   */
  id: string;

  constructor(data?: PartialMessage<CreateDrawResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "draws.v1.private.CreateDrawResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDrawResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDrawResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDrawResponse;

  static equals(a: CreateDrawResponse | PlainMessage<CreateDrawResponse> | undefined, b: CreateDrawResponse | PlainMessage<CreateDrawResponse> | undefined): boolean;
}

